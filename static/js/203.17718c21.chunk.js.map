{"version":3,"file":"static/js/203.17718c21.chunk.js","mappings":"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","sources":["pages/AddPetPage/AddPetPage.styled.js","components/Steps/Step1/ChooseOptions.styled.js","components/Steps/Step1/ChooseOptions.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/Steps/Step2/AddDetails.styled.js","components/Steps/Step2/AddDetails.jsx","components/Steps/Step3/AddMoreInfo.styled.js","components/Steps/Step3/AddMoreInfo.jsx","components/Stepper/Stepper.styled.js","components/Stepper/Stepper.jsx","pages/AddPetPage/AddPetPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { devices } from '../../constants/breakpoints';\nimport { colors } from '../../constants/colors';\nimport { Form } from 'formik';\n\nexport const Wrapper = styled.div`\n  width: 280px;\n  padding: 20px 8px;\n  margin: 0 auto;\n  margin-top: 20px;\n  background-color: #ffffff;\n  border-radius: 40px;\n\n  @media only screen and ${devices.tablet} {\n    width: ${props =>\n      props.width !== 'your pet' && props.step === 2 ? '704px' : '458px'};\n    margin-top: 60px;\n    padding: 20px 32px;\n  }\n\n  @media only screen and ${devices.desktop} {\n    width: ${props =>\n      props.width !== 'your pet' && props.step === 2 ? '822px' : '458px'};\n    margin-top: 40px;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 24px;\n  padding-left: 12px;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.36;\n\n  @media only screen and ${devices.tablet} {\n    text-align: ${props =>\n      props.step === 2 && props.category !== 'your pet' && 'center'};\n    padding-left: 0px;\n    font-size: 28px;\n  }\n\n  @media only screen and ${devices.desktop} {\n  }\n`;\n\nexport const FormContainer = styled(Form)`\n  min-height: 496px;\n  padding: 20px 8px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media only screen and ${devices.tablet} {\n    min-height: 542px;\n    padding: 20px 32px;\n  }\n\n  @media only screen and ${devices.desktop} {\n    padding: ${props => props.padding && '20px 73px'};\n  }\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: ${props =>\n    props.$step1\n      ? '91px'\n      : props.$step2 && props.category === 'your pet'\n      ? '44px'\n      : '24px'};\n\n  @media only screen and ${devices.tablet} {\n    flex-direction: row-reverse;\n    justify-content: ${props => (props.$step3 && props.category) !== 'your pet' && 'center'};\n    margin-top: ${props =>\n      props.$step1\n        ? '137px'\n        : props.$step2 && props.category === 'your pet'\n        ? '40px'\n        : props.$step2 && props.category !== 'your pet'\n        ? '32px'\n        : props.$step3 && props.category === 'your pet'\n        ? '17px'\n        : '60px'};\n    gap: 24px;\n  }\n\n  @media only screen and ${devices.desktop} {\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 40px;\n  border: none;\n  padding: ${props => (props.$primary ? '9px 0' : 0)};\n  background-color: ${props =>\n    props.$primary ? colors.blueColor : 'transparent'};\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.36;\n  color: ${props =>\n    props.$primary ? colors.secondaryTextColor : colors.blueColor};\n\n  @media only screen and ${devices.tablet} {\n    width: ${props => props.$primary && '248px'};\n  }\n\n  @media only screen and ${devices.desktop} {\n  }\n`;\n\nexport const ErrorText = styled.p`\n  margin-top: 10px;\n  color: ${colors.redErrorColor};\n`;\n","import styled from 'styled-components';\nimport { colors } from '../../../constants/colors';\nimport { Field} from 'formik';\n\n\nexport const ContentBox = styled.div`\n  display: flex;\n  gap: 12px;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const Label = styled.label`\n  padding: 8px 16px;\n  border-radius: 40px;\n  background-color: ${colors.lightBlueColor};\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.36;\n  color: ${colors.blueColor};\n  transition: background-color 0.3s ease;\n`;\n\nexport const Input = styled(Field)`\n  position: absolute;\n  left: -150%;\n  background-color: ${colors.lightBlueColor};\n  color: ${colors.blueColor};\n\n  &:checked + ${Label} {\n    background-color: ${colors.blueColor};\n    color: ${colors.secondaryTextColor};\n  }\n`;","import React from 'react';\nimport * as Yup from 'yup';\nimport { ContentBox, Input, Label } from './ChooseOptions.styled';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  ButtonBox,\n  ErrorText,\n  Button,\n} from 'pages/AddPetPage/AddPetPage.styled';\nimport SvgIcon from 'components/SvgIcon/SvgIcon';\nimport { colors } from '../../../constants/colors';\n\nconst validationChooseOptions = Yup.object().shape({\n  category: Yup.string()\n    .oneOf(['your pet', 'sell', 'lost/found', 'in good hands'])\n    .required('Сhoose one of the categories! '),\n});\n\nexport default function ChooseOptions(props) {\n  const navigate = useNavigate();\n\n  const handleSubmit = values => {\n    props.next(values);\n  };\n\n  return (\n    <Formik\n      initialValues={props.data}\n      onSubmit={handleSubmit}\n      validationSchema={validationChooseOptions}\n    >\n      {({ values }) => (\n        <Form>\n          <ContentBox>\n            <Input type=\"radio\" name=\"category\" value=\"your pet\" id=\"1\" />\n            <Label htmlFor=\"1\">your pet</Label>\n            <Input type=\"radio\" name=\"category\" value=\"sell\" id=\"2\" />\n            <Label htmlFor=\"2\">sell</Label>\n            <Input type=\"radio\" name=\"category\" value=\"lost/found\" id=\"3\" />\n            <Label htmlFor=\"3\">lost/found</Label>\n            <Input type=\"radio\" name=\"category\" value=\"in good hands\" id=\"4\" />\n            <Label htmlFor=\"4\">in good hands</Label>\n          </ContentBox>\n          <ErrorMessage name=\"category\">\n            {msg => <ErrorText>{msg}</ErrorText>}\n          </ErrorMessage>\n          <ButtonBox $step1>\n            <Button type=\"submit\" $primary>\n            Next&nbsp;&nbsp;\n            <SvgIcon id={'icon-pawprint-1'} color={'none'} />\n            </Button>\n            <Button type=\"button\" onClick={() => navigate(-1)}>\n            <SvgIcon id={'icon-arrow-left'} color={colors.blueColor} />\n            &nbsp;&nbsp;Cancel\n            </Button>\n          </ButtonBox>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import styled from 'styled-components';\nimport { devices } from '../../../constants/breakpoints';\nimport { colors } from '../../../constants/colors';\nimport { Field } from 'formik';\n\nexport const ContentBox2 = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const FieldContainer = styled.div`\n  width: 100%;\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n\n  @media only screen and ${devices.tablet} {\n    &:not(:last-child) {\n      margin-bottom: 24px;\n    }\n  }\n`;\n\nexport const Label2 = styled.label`\n  display: block;\n  margin-bottom: 4px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.36;\n  color: ${colors.textColor};\n\n  @media only screen and ${devices.tablet} {\n    margin-bottom: 8px;\n    font-size: 20px;\n    line-height: 1.32;\n  }\n`;\n\nexport const Input2 = styled(Field)`\n  height: ${props => props.$textarea && '92px'};\n  width: 100%;\n  padding: 8px 16px;\n  font-size: 14px;\n  border-radius: ${props => (props.$textarea ? '20px' : '40px')};\n  border: 1px solid ${props =>\n    props.error ? colors.redErrorColor : colors.blueColor};\n\n  ::placeholder {\n    font-size: 14px;\n    line-height: 1.5;\n    color: #888888;\n  }\n\n  @media only screen and ${devices.tablet} {\n    height: ${props => props.$textarea && '79px'};\n    padding: 12px 16px;\n    font-size: 16px;\n\n    ::placeholder {\n      font-size: 16px;\n    }\n`;\n\nexport const ErrorText = styled.p`\n  margin-top: 4px;\n  color: ${colors.redErrorColor};\n`;\n","import React from 'react';\nimport * as Yup from 'yup';\nimport { useField } from 'formik';\nimport {\n  ContentBox2,\n  FieldContainer,\n  Label2,\n  Input2,\n  ErrorText,\n} from './AddDetails.styled';\nimport { ButtonBox, Button } from 'pages/AddPetPage/AddPetPage.styled';\nimport { Formik, Form } from 'formik';\nimport SvgIcon from 'components/SvgIcon/SvgIcon';\nimport { colors } from '../../../constants/colors';\n\nconst validationAddDetails = Yup.object().shape({\n  title: Yup.string().when('category', {\n    is: category => ['sell', 'lost/found', 'in good hands'].includes(category),\n    then: () => Yup.string().required('Title is required'),\n  }),\n  namePets: Yup.string()\n    .required('Required field')\n    .min(2, 'Name must be at least 2 characters')\n    .max(16, 'Name must be no more than 16 characters'),\n  dateOfBirth: Yup.string()\n    .required('Date is required')\n    .matches(\n      /^(0[1-9]|1[0-9]|2[0-9]|3[01])\\.(0[1-9]|1[012])\\.\\d{4}$/,\n      'Invalid date format (dd.mm.yyyy)'\n    )\n    .test(\n      'not-in-future',\n      'Date should not exceed the current date',\n      function (value) {\n        const currentDate = new Date();\n        const inputDate = new Date(\n          value.substring(6),\n          value.substring(3, 5) - 1,\n          value.substring(0, 2)\n        );\n        return inputDate <= currentDate;\n      }\n    ),\n  typePets: Yup.string()\n    .required('Required field')\n    .min(2, 'Name must be at least 2 characters')\n    .max(16, 'Name must be no more than 16 characters'),\n});\n\nconst Input = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <FieldContainer>\n      <Label2>{label}</Label2>\n      <Input2 {...field} {...props} error={meta.error} />\n      {meta.touched && meta.error ? (\n        <ErrorText className=\"error\">{meta.error}</ErrorText>\n      ) : null}\n    </FieldContainer>\n  );\n};\n\nexport default function AddDetails(props) {\n  const handleSubmit = values => {\n    props.next(values);\n  };\n\n  const choosedCategory = props.data.category;\n\n  return (\n    <Formik\n      initialValues={props.data}\n      onSubmit={handleSubmit}\n      validationSchema={validationAddDetails}\n    >\n      {({ values }) => (\n        <Form>\n          {choosedCategory === 'your pet' && (\n            <ContentBox2>\n              <Input\n                type=\"text\"\n                name=\"namePets\"\n                label=\"Pet’s name\"\n                placeholder=\"Type name pet\"\n              />\n              <Input\n                type=\"text\"\n                name=\"dateOfBirth\"\n                label=\"Date of birth\"\n                placeholder=\"Type date of birth\"\n              />\n              <Input\n                type=\"text\"\n                name=\"typePets\"\n                label=\"Type\"\n                placeholder=\"Type of pet\"\n              />\n            </ContentBox2>\n          )}\n          {choosedCategory !== 'your pet' && (\n            <ContentBox2>\n              <Input\n                type=\"text\"\n                name=\"title\"\n                label=\"Title of add\"\n                placeholder=\"Title of add\"\n              />\n              <Input\n                type=\"text\"\n                name=\"namePets\"\n                label=\"Pet’s name\"\n                placeholder=\"Type name pet\"\n              />\n              <Input\n                type=\"text\"\n                name=\"dateOfBirth\"\n                label=\"Date of birth\"\n                placeholder=\"Type date of birth\"\n              />\n              <Input\n                type=\"text\"\n                name=\"typePets\"\n                label=\"Type\"\n                placeholder=\"Type of pet\"\n              />\n            </ContentBox2>\n          )}\n          <ButtonBox $step2 category={choosedCategory}>\n            <Button type=\"submit\" $primary >\n              Next&nbsp;&nbsp;\n              <SvgIcon id={'icon-pawprint-1'} color={'none'} />\n            </Button>\n            <Button type=\"button\" onClick={() => props.back(values)}>\n              <SvgIcon id={'icon-arrow-left'} color={colors.blueColor} />\n              &nbsp;&nbsp;Back\n            </Button>\n          </ButtonBox>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import styled from 'styled-components';\nimport { devices } from '../../../constants/breakpoints';\nimport { colors } from '../../../constants/colors';\nimport { Field } from 'formik';\nimport { ContentBox2, Label2, Input2 } from '../Step2/AddDetails.styled';\n\nexport const ContentBox3 = styled(ContentBox2)`\n  @media only screen and ${devices.tablet} {\n    flex-direction: row;\n    gap: 45px;\n  }\n\n  @media only screen and ${devices.desktop} {\n    gap: 79px;\n  }\n`;\n\nexport const BoxFieldImg = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  margin-bottom: 24px;\n\n  @media only screen and ${devices.tablet} {\n    gap: 16px;\n  }\n`;\n\nexport const StyleContainer = styled.div`\n  margin-bottom: 16px;\n\n  @media only screen and ${devices.tablet} {\n    margin-bottom: 0;\n  }\n`;\n\nexport const StyleContainer2 = styled.div`\n  width: 100%;\n`;\n\nexport const DecorBox = styled.div`\n  margin-bottom: 16px;\n\n  @media only screen and ${devices.tablet} {\n    margin-bottom: 48px;\n  }\n`;\n\nexport const RadioContainer = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nexport const LabelRadio = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 6px 16px;\n  border-radius: 40px;\n  background-color: ${props => props.checked ? colors.blueColor : 'transparent'};\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${props => props.checked ? colors.textButtonColor : \"#888888\"};\n  transition: background-color 0.3s ease;\n`;\n\nexport const InputRadio = styled(Field)`\n  position: absolute;\n  left: -150%;\n`;\n\nexport const BoxFieldImg2 = styled(BoxFieldImg)`\n  margin-bottom: 0;\n\n  @media only screen and ${devices.tablet} {\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  @media only screen and ${devices.desktop} {\n    gap: 12px;\n  }\n`;\n\nexport const Label3 = styled(Label2)`\n  width: 81px;\n  margin-bottom: 0px;\n\n  @media only screen and ${devices.tablet} {\n    width: 114px;\n  }\n`;\n\nexport const LabelImgSell = styled.p`\n  @media only screen and ${devices.tablet} {\n    width: 200px;\n  }\n`;\n\nexport const InputImg = styled(Field)`\n  position: absolute !important;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n  clip: rect(1px, 1px, 1px, 1px);\n`;\n\nexport const ButtonAddFile = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 112px;\n  height: 112px;\n  border: none;\n  border-radius: 20px;\n  background-color: ${colors.lightBlueColor};\n\n  @media only screen and ${devices.tablet} {\n    width: 182px;\n    height: 182px;\n    border-radius: 40px;\n  }\n`;\n\nexport const ImitationLabel = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.36;\n  width: 81px;\n  margin-bottom: 0px;\n\n  @media only screen and ${devices.tablet} {\n    width: ${props => (props.$sell ? '200px' : '114px')};\n    font-size: 20px;\n    line-height: 1.32;\n  }\n`;\n\nexport const ImgPets = styled.img`\n  width: 112px;\n  height: 112px;\n  border-radius: 20px;\n\n  @media only screen and ${devices.tablet} {\n    width: 182px;\n    height: 182px;\n    border-radius: 40px;\n  }\n`;\n\nexport const Input3 = styled(Input2)`\n  height: ${props => props.$textarea && '92px'};\n\n  @media only screen and ${devices.tablet} {\n    height: ${props => props.$textarea && '182px'};\n  }\n`;\n\nexport const TitleRadio = styled.p`\n  margin-bottom: 8px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.36;\n  color: ${colors.textColor};\n\n  @media only screen and ${devices.tablet} {\n    font-size: 20px;\n    line-height: 1.32;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  margin-top: ${props => (props.$inputimg ? '7px' : '4px')};\n  color: ${colors.redErrorColor};\n`;\n","import React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { ErrorMessage, useField, Formik, Form } from 'formik';\nimport { ContentBox2, Label2, Input2, FieldContainer } from '../Step2/AddDetails.styled';\nimport {\n  ContentBox3,\n  BoxFieldImg,\n  InputImg,\n  StyleContainer,\n  StyleContainer2,\n  TitleRadio,\n  RadioContainer,\n  BoxFieldImg2,\n  ErrorText,\n  DecorBox,\n  ButtonAddFile,\n  ImitationLabel,\n  ImgPets,\n  LabelRadio,\n  InputRadio,\n} from './AddMoreInfo.styled';\nimport { ButtonBox, Button } from 'pages/AddPetPage/AddPetPage.styled';\nimport SvgIcon from 'components/SvgIcon/SvgIcon';\nimport { colors } from '../../../constants/colors';\n\nconst validationAddMoreInfo = data => {\n  if (data.category === 'your pet') {\n    const validSchema = Yup.object().shape({\n      // imagesPets: Yup.mixed()\n      //   .required('Image is required')\n      //   .test(\n      //     'image',\n      //     'Image size must be less then 3mb',\n      //     value => value && value.size <= 3 * 1024 * 1024\n      //   ),\n      comments: Yup.string().max(\n        120,\n        'Comments must be no more than 120 characters'\n      ),\n    });\n\n    return validSchema;\n  }\n\n  const validSchema = Yup.object().shape({\n    // imagesPets: Yup.mixed()\n    //   .required('Image is required')\n    //   .test(\n    //     'image',\n    //     'Image size must be less then 3mb',\n    //     value => value && value.size <= 3 * 1024 * 1024\n    //   ),\n    gender: Yup.string().oneOf(['male', 'female']).required('Choose a gender!'),\n    location: Yup.string()\n      .matches(\n        /^[A-Z][a-z]+(,\\s[A-Z][a-z]+)*$/,\n        'Invalid city format. Use format like \"Kyiv, Brovary\"'\n      )\n      .required('Location is required'),\n    price: Yup.number().when('category', {\n      is: category => category === 'sell',\n      then: () =>\n        Yup.number()\n          .moreThan(0, 'Price must be greater than 0')\n          .required('Price is required'),\n    }),\n    comments: Yup.string().max(\n      120,\n      'Comments must be no more than 120 characters'\n    ),\n  });\n\n  return validSchema;\n};\n\nconst Input = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <FieldContainer>\n      <Label2>{label}</Label2>\n      <Input2 {...field} {...props} isError={meta.error} />\n      {meta.touched && meta.error ? (\n        <ErrorText className=\"error\">{meta.error}</ErrorText>\n      ) : null}\n    </FieldContainer>\n  );\n};\n\nexport default function AddMoreInfo(props) {\n  const choosedCategory = props.data.category;\n\n  const [urlImg, setUrlImg] = useState('');\n  const [file, setFile] = useState('');\n\n  const addFile = e => {\n    const file = e.target.files[0];\n    setFile(file);\n\n    const objectURL = window.URL.createObjectURL(file);\n    setUrlImg(objectURL);\n  };\n\n  const deleteFile = () => {\n    setUrlImg('');\n  };\n\n  const handleSubmit = values => {\n    const updateValues = { ...values, imagesPets: file };\n    props.next(updateValues, true);\n  };\n\n  return (\n    <Formik\n      validationSchema={validationAddMoreInfo(props.data)}\n      initialValues={props.data}\n      onSubmit={handleSubmit}\n    >\n      {({ values }) => (\n        <Form>\n          {choosedCategory === 'your pet' && (\n            <ContentBox2>\n              <BoxFieldImg>\n                <div>\n                  <ImitationLabel>Load the pet’s image:</ImitationLabel>\n                  <ErrorMessage name=\"imagesPets\">\n                    {msg => <ErrorText $inputimg>{msg}</ErrorText>}\n                  </ErrorMessage>\n                </div>\n                {!urlImg && (\n                  <ButtonAddFile htmlFor=\"1\">\n                    <SvgIcon id={'icon-plus'} color={colors.blueColor} />\n                  </ButtonAddFile>\n                )}\n                <InputImg\n                  type=\"file\"\n                  name=\"imagesPets\"\n                  id=\"1\"\n                  accept=\"image/*\"\n                  onChange={addFile}\n                />\n                {urlImg && (\n                  <ImgPets src={urlImg} alt=\"pets\" onClick={deleteFile} />\n                )}\n              </BoxFieldImg>\n              <Input\n                as=\"textarea\"\n                name=\"comments\"\n                label=\"Comments\"\n                placeholder=\"Type of pet\"\n                $textarea\n              />\n            </ContentBox2>\n          )}\n          {choosedCategory === 'sell' && (\n            <ContentBox3>\n              <StyleContainer>\n                <TitleRadio>The Sex</TitleRadio>\n                <DecorBox>\n                  <RadioContainer>\n                    <LabelRadio\n                      htmlFor=\"1\"\n                      checked={values.gender === 'female'}\n                    >\n                      <InputRadio\n                        type=\"radio\"\n                        name=\"gender\"\n                        value=\"female\"\n                        id=\"1\"\n                      />\n                      <SvgIcon\n                        id={'icon-female'}\n                        color={\n                          values.gender === 'female'\n                            ? colors.textButtonColor\n                            : values.gender === 'male'\n                            ? '#888888'\n                            : colors.redErrorColor\n                        }\n                      />\n                      <p>Female</p>\n                    </LabelRadio>\n                    <LabelRadio htmlFor=\"2\" checked={values.gender === 'male'}>\n                      <InputRadio\n                        type=\"radio\"\n                        name=\"gender\"\n                        value=\"male\"\n                        id=\"2\"\n                      />\n                      <SvgIcon\n                        id={'icon-male'}\n                        color={\n                          values.gender === 'male'\n                            ? colors.textButtonColor\n                            : values.gender === 'female'\n                            ? '#888888'\n                            : colors.blueColor\n                        }\n                      />\n                      <p>Male</p>\n                    </LabelRadio>\n                  </RadioContainer>\n                  <ErrorMessage name=\"gender\">\n                    {msg => <ErrorText>{msg}</ErrorText>}\n                  </ErrorMessage>\n                </DecorBox>\n                <BoxFieldImg2>\n                  <ImitationLabel $sell>\n                    {urlImg ? 'Add photo' : 'Load the pet’s image:'}\n                    <ErrorMessage name=\"imagesPets\">\n                      {msg => <ErrorText>{msg}</ErrorText>}\n                    </ErrorMessage>\n                  </ImitationLabel>\n                  {!urlImg && (\n                    <ButtonAddFile htmlFor=\"3\">\n                      <SvgIcon id={'icon-plus'} color={colors.blueColor} />\n                    </ButtonAddFile>\n                  )}\n                  <InputImg\n                    type=\"file\"\n                    name=\"imagesPets\"\n                    id=\"3\"\n                    accept=\"image/*\"\n                    onChange={addFile}\n                  />\n                  {urlImg && (\n                    <ImgPets src={urlImg} alt=\"pets\" onClick={deleteFile} />\n                  )}\n                </BoxFieldImg2>\n              </StyleContainer>\n              <StyleContainer2>\n                <Input\n                  type=\"text\"\n                  name=\"location\"\n                  label=\"Location\"\n                  placeholder=\"Type of location\"\n                />\n                <Input\n                  type=\"number\"\n                  name=\"price\"\n                  label=\"Price\"\n                  placeholder=\"Type of price\"\n                />\n                <FieldContainer>\n                  <Input\n                    as=\"textarea\"\n                    name=\"comments\"\n                    label=\"Comments\"\n                    placeholder=\"Type of pet\"\n                    $textarea\n                  />\n                </FieldContainer>\n              </StyleContainer2>\n            </ContentBox3>\n          )}\n          {(choosedCategory === 'lost/found' ||\n            choosedCategory === 'in good hands') && (\n            <ContentBox3>\n              <StyleContainer>\n                <TitleRadio>The Sex</TitleRadio>\n                <DecorBox>\n                  <RadioContainer>\n                  <LabelRadio\n                      htmlFor=\"1\"\n                      checked={values.gender === 'female'}\n                    >\n                      <InputRadio\n                        type=\"radio\"\n                        name=\"gender\"\n                        value=\"female\"\n                        id=\"1\"\n                      />\n                      <SvgIcon\n                        id={'icon-female'}\n                        color={\n                          values.gender === 'female'\n                            ? colors.textButtonColor\n                            : values.gender === 'male'\n                            ? '#888888'\n                            : colors.redErrorColor\n                        }\n                      />\n                      <p>Female</p>\n                    </LabelRadio>\n                    <LabelRadio htmlFor=\"2\" checked={values.gender === 'male'}>\n                      <InputRadio\n                        type=\"radio\"\n                        name=\"gender\"\n                        value=\"male\"\n                        id=\"2\"\n                      />\n                      <SvgIcon\n                        id={'icon-male'}\n                        color={\n                          values.gender === 'male'\n                            ? colors.textButtonColor\n                            : values.gender === 'female'\n                            ? '#888888'\n                            : colors.blueColor\n                        }\n                      />\n                      <p>Male</p>\n                    </LabelRadio>\n                  </RadioContainer>\n                  <ErrorMessage name=\"gender\">\n                    {msg => <ErrorText>{msg}</ErrorText>}\n                  </ErrorMessage>\n                </DecorBox>\n                <BoxFieldImg2>\n                  <ImitationLabel htmlFor=\"3\" $sell>\n                    Load the pet’s image:\n                    <ErrorMessage name=\"imagesPets\">\n                      {msg => <ErrorText>{msg}</ErrorText>}\n                    </ErrorMessage>\n                  </ImitationLabel>\n                  {!urlImg && (\n                    <ButtonAddFile htmlFor=\"3\">\n                      <SvgIcon id={'icon-plus'} color={colors.blueColor} />\n                    </ButtonAddFile>\n                  )}\n                  <InputImg\n                    type=\"file\"\n                    name=\"imagesPets\"\n                    id=\"3\"\n                    accept=\"image/*\"\n                    onChange={addFile}\n                  />\n                  {urlImg && (\n                    <ImgPets src={urlImg} alt=\"pets\" onClick={deleteFile} />\n                  )}\n                </BoxFieldImg2>\n              </StyleContainer>\n              <StyleContainer2>\n                <Input\n                  type=\"text\"\n                  name=\"location\"\n                  label=\"Location\"\n                  placeholder=\"Type of location\"\n                />\n                <FieldContainer>\n                  <Input\n                    as=\"textarea\"\n                    name=\"comments\"\n                    label=\"Comments\"\n                    placeholder=\"Type of pet\"\n                    $textarea\n                  />\n                </FieldContainer>\n              </StyleContainer2>\n            </ContentBox3>\n          )}\n          <ButtonBox $step3 category={choosedCategory}>\n            <Button type=\"submit\" $primary>\n              Done&nbsp;&nbsp;\n              <SvgIcon id={'icon-pawprint-1'} color={'none'} />\n            </Button>\n            <Button type=\"button\" onClick={() => props.back(values)}>\n              <SvgIcon id={'icon-arrow-left'} color={colors.blueColor} />\n              &nbsp;&nbsp;Back\n            </Button>\n          </ButtonBox>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import styled from 'styled-components';\nimport { devices } from '../../constants/breakpoints';\nimport { colors } from '../../constants/colors';\n\nexport const StepperBox = styled.div`\n  margin-bottom: 24px;\n  display: flex;\n  justify-content: center;\n  gap: 12px;\n\n  @media only screen and ${devices.tablet} {\n    gap: 16px;\n  }\n`;\n\nexport const BoxStep = styled.div`\n  width: 80px;\n\n  @media only screen and ${devices.tablet} {\n    width: 120px;\n  }\n`;\n\nexport const NameStep = styled.p`\n  margin-bottom: 12px;\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 1.36;\n  color: ${props => props.$activeStep ? colors.blueColor : (props.$successStep ? colors.greenStepSuccessColor : \" #888888\")};\n\n  @media only screen and ${devices.tablet} {\n    line-height: 1.65;\n    font-size: 16px;\n  }\n`;\n\nexport const MarkStep = styled.div`\n  width: 100%;\n  height: 8px;\n  border-radius: 8px;\n  background-color: ${props => props.$activeStep ? colors.blueColor : (props.$successStep ? colors.greenStepSuccessColor : colors.lightBlueColor)};\n`;\n","import React from 'react';\nimport { StepperBox, NameStep, MarkStep, BoxStep } from './Stepper.styled';\n\nexport default function Stepper({ currentStep }) {\n\n  const steps = [\n    { step: 0, label: 'Choose  option' },\n    { step: 1, label: 'Personal details' },\n    { step: 2, label: 'More info' },\n  ];\n  \n \n\n  const addStyle = step => {\n    if (currentStep === step.step) {\n      return (\n        <BoxStep key={step.label}>\n          <NameStep $activeStep>{step.label}</NameStep>\n          <MarkStep $activeStep></MarkStep>\n        </BoxStep>\n      );\n    } else if (currentStep > step.step) {\n      return (\n        <BoxStep key={step.label}>\n          <NameStep $successStep>{step.label}</NameStep>\n          <MarkStep $successStep></MarkStep>\n        </BoxStep>\n      );\n    }\n\n    return (\n      <BoxStep key={step.label}>\n        <NameStep>{step.label}</NameStep>\n        <MarkStep></MarkStep>\n      </BoxStep>\n    );\n  };\n\n\n  return <StepperBox>{steps.map(step => addStyle(step))}</StepperBox>;\n}\n\n  ","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport {\n  Wrapper,\n  Title,\n} from './AddPetPage.styled';\n\nimport ChooseOptions from 'components/Steps/Step1/ChooseOptions';\nimport AddDetails from 'components/Steps/Step2/AddDetails';\nimport AddMoreInfo from 'components/Steps/Step3/AddMoreInfo';\nimport Stepper from 'components/Stepper/Stepper';\nimport { addPet } from 'redux/operations/fetchUser';\nimport { addNotice } from 'redux/operations/fetchNotices';\n\nexport default function AddPetPage() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [data, setData] = useState({\n    category: '',\n    namePets: '',\n    dateOfBirth: '',\n    typePets: '',\n    imagesPets: '',\n    comments: '',\n    title: '',\n    gender: '',\n    location: '',\n    price: '',\n  });\n  const [activeStep, setActiveStep] = useState(0);\n\n  const sendDataPets = ( data ) => {\n    const formData = new FormData();\n\n    if (data.category === 'your pet') {\n      formData.append('name', data.namePets);\n      formData.append('dateOfBirth', data.dateOfBirth);\n      formData.append('type', data.typePets);\n      formData.append('petAvatar', data.imagesPets);\n      formData.append('comments', data.comments);\n\n      dispatch(addPet(formData)).then(response => {\n        if (!response.error) {\n          navigate('/user');\n          return;\n        }\n      });\n      return;\n    }\n\n    if (data.category !== 'your pet') {\n      let formattedCategory = 'sell';\n\n      if (data.category === 'lost/found') {\n        formattedCategory = 'lost-found'\n      }\n\n      if (data.category === \"in good hands\") {\n        formattedCategory = \"in-good-hands\"\n      }\n\n      formData.append('category', formattedCategory);\n      formData.append('name', data.namePets);\n      formData.append('dateOfBirth', data.dateOfBirth);\n      formData.append('type', data.typePets);\n      formData.append('petAvatar', data.imagesPets);\n      formData.append('comments', data.comments);\n      formData.append('title', data.title);\n      formData.append('sex', data.gender);\n      formData.append('location', data.location);\n\n      if (formattedCategory === 'sell') {\n        formData.append('price', data.price);\n      }\n      \n\n\n      dispatch(addNotice(formData)).then(response => {\n        if (!response.error) {\n          navigate(`/notices/${formattedCategory}`);\n          return;\n        }\n      });\n      return;\n    }\n  };\n\n  const handleNextStep = (newData, final = false) => {\n    setData(prev => ({ ...prev, ...newData }));\n\n    if (final) {\n      sendDataPets(newData);\n      return;\n    }\n\n    setActiveStep(prevState => prevState + 1);\n  };\n\n  const handlePrevStep = newData => {\n    setData(prev => ({ ...prev, ...newData }));\n\n    setActiveStep(prevState => prevState - 1);\n  };\n\n  const steps = [\n    <ChooseOptions next={handleNextStep} data={data} />,\n    <AddDetails next={handleNextStep} back={handlePrevStep} data={data} />,\n    <AddMoreInfo next={handleNextStep} back={handlePrevStep} data={data} />,\n  ];\n\n\n  return (\n    <Wrapper width={data.category} step={activeStep}>\n      <Title step={activeStep} category={data.category}>\n        {activeStep === 0\n          ? 'Add pet'\n          : data.category === 'your pet'\n          ? 'Add pet'\n          : data.category === 'sell'\n          ? 'Add pet for sale'\n          : data.category === 'lost/found'\n          ? 'Add lost pet'\n          : 'Add lost pet'}\n      </Title>\n      <Stepper currentStep={activeStep} />\n      {steps[activeStep]}\n    </Wrapper>\n  );\n}\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","devices","props","width","step","Title","_templateObject2","category","ButtonBox","Form","_templateObject3","padding","_templateObject4","$step1","$step2","$step3","Button","_templateObject5","$primary","colors","ErrorText","_templateObject6","ContentBox","Label","Input","Field","validationChooseOptions","Yup","shape","oneOf","required","ChooseOptions","navigate","useNavigate","_jsx","Formik","initialValues","data","onSubmit","values","next","validationSchema","children","_ref","_jsxs","type","name","value","id","htmlFor","ErrorMessage","msg","SvgIcon","color","onClick","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ContentBox2","FieldContainer","Label2","Input2","$textarea","error","validationAddDetails","title","when","is","includes","then","namePets","min","max","dateOfBirth","matches","test","currentDate","Date","substring","typePets","label","_excluded","_useField","useField","_useField2","_slicedToArray","field","meta","_objectSpread","touched","className","AddDetails","choosedCategory","_ref2","placeholder","back","ContentBox3","BoxFieldImg","StyleContainer","StyleContainer2","DecorBox","RadioContainer","LabelRadio","_templateObject7","checked","InputRadio","_templateObject8","BoxFieldImg2","_templateObject9","InputImg","_templateObject10","_templateObject11","_templateObject12","ButtonAddFile","_templateObject13","ImitationLabel","_templateObject14","$sell","ImgPets","_templateObject15","TitleRadio","_templateObject16","_templateObject17","_templateObject18","$inputimg","isError","AddMoreInfo","_useState","useState","_useState2","urlImg","setUrlImg","_useState3","_useState4","file","setFile","addFile","e","files","objectURL","window","URL","createObjectURL","deleteFile","comments","gender","location","price","moreThan","updateValues","imagesPets","accept","onChange","src","alt","as","StepperBox","BoxStep","NameStep","$activeStep","$successStep","MarkStep","Stepper","currentStep","map","addStyle","AddPetPage","dispatch","useDispatch","setData","activeStep","setActiveStep","sendDataPets","formData","FormData","append","addPet","response","formattedCategory","addNotice","concat","handleNextStep","newData","final","arguments","undefined","prev","prevState","handlePrevStep","steps"],"sourceRoot":""}